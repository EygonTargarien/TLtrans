<%
	/** примеры цветов
	 * @name ui-demo/colors */

	const colors = [
		'light',
		'dark',
		'main',
		'secondary',
		'active',
		'bg',
		'border',
		'text',
		'accent',
		'warn',
		'error'
	];
%>
<div class="container">
	<div class="grid grid--2 grid--sm-3 grid--space-lg">
		<% colors.forEach(color => { %>
		<div class="gcell">
			<div class="_plr-lg _ptb-md _mb-sm _bgcolor-<%- color %>" style="border: 1px solid rgba(0,0,0,0.05)">
				<span data-demo-color>&nbsp;</span>
			</div>
			<span><%- color %></span>
		</div>
		<% }) %>
		<script>
			(function (window) {
				document.addEventListener("DOMContentLoaded", function () {
					var $ = window.jQuery;
					$('[data-demo-color]').each(function () {
						var $color = $(this);
						var $block = $color.parent();
						var hexColor = rgb2hex($block.css('background-color'));
						var textColor = isDarkColor(hexColor) ? '#fff' : '#000';
						$color.text(hexColor).css('color', textColor);
					});

					function rgb2hex (rgb) {
						rgb = rgb.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i);
						return (rgb && rgb.length === 4) ? "#" +
						       ("0" + parseInt(rgb[1], 10).toString(16)).slice(-2) +
						       ("0" + parseInt(rgb[2], 10).toString(16)).slice(-2) +
						       ("0" + parseInt(rgb[3], 10).toString(16)).slice(-2) : '';
					}

					function isDarkColor (hex) {
						var hex = hex.substring(1);
						var rgb = parseInt(hex, 16);
						var r = (rgb >> 16) & 0xff;
						var g = (rgb >> 8) & 0xff;
						var b = (rgb >> 0) & 0xff;

						var luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;
						return luma < 65;
					}
				});
			})(window);
		</script>
	</div>
</div>
